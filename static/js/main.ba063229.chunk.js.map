{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","children","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","el","name","onClick","Notification","message","App","state","handleFeedbackLeave","event","stateItem","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVASeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,mCACCD,MCmBUE,G,MArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKN,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,wBACA,oBAAGA,UAAU,mBAAb,mBAAuCE,KACvC,oBAAGF,UAAU,mBAAb,sBAA0CG,KAC1C,oBAAGH,UAAU,mBAAb,kBAAsCI,KACtC,oBAAGJ,UAAU,mBAAb,oBAAwCK,KACxC,oBAAGL,UAAU,mBAAb,kCACwBM,EADxB,YCcWC,G,MArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIT,UAAU,kBAAd,SACGQ,EAAQE,KAAI,SAAAC,GAAE,OACb,oBAAIX,UAAU,wBAAd,SACE,wBACEA,UAAU,0BACVY,KAAMD,EACNE,QAASJ,EAHX,SAKGE,KANsCA,UCGlCG,G,MANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIf,UAAU,eAAd,SAA8Be,MC+CjBC,E,4MA5CbC,MAAQ,CAAEf,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCc,oBAAsB,SAAAC,GACpB,IAAIC,EAAYD,EAAME,cAAcT,KACpC,EAAKU,UAAS,SAAAC,GAAS,sBACpBH,EAAYG,EAAUH,GAAa,O,EAIxCI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MACpC,OAFyB,EACjBf,KADiB,EACXC,QADW,EACFC,K,EAIzBqB,gCAAkC,WAAO,IAC/BvB,EAAS,EAAKe,MAAdf,KACR,OAAOwB,KAAKC,MAAOzB,EAAO,EAAKsB,qBAAwB,M,4CAGzD,WAAU,IAAD,EACwBI,KAAKX,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEI,QAASqB,OAAOC,KAAKF,KAAKX,OAC1BR,gBAAiBmB,KAAKV,sBAEvBU,KAAKJ,qBACJ,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,KAAKJ,qBACZlB,mBAAoBsB,KAAKH,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,6B,GAtCdgB,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba063229.chunk.js","sourcesContent":["import './Section.scss';\n\nconst Section = ({ children }) => (\n  <section className=\"Section\">\n    <h1 className=\"Section__title\">Please leave feedback</h1>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport './Statistics.scss';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"Statistics\">\n    <h2 className=\"Statistics__title\">Statistics</h2>\n    <p className=\"Statistics__item\">Good: {good}</p>\n    <p className=\"Statistics__item\">Neutral: {neutral}</p>\n    <p className=\"Statistics__item\">Bad: {bad}</p>\n    <p className=\"Statistics__item\">Total: {total}</p>\n    <p className=\"Statistics__item\">\n      Positive Percentage: {positivePercentage}%\n    </p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className=\"FeedbackOptions\">\n    {options.map(el => (\n      <li className=\"FeedbackOptions__item\" key={el}>\n        <button\n          className=\"FeedbackOptions__button\"\n          name={el}\n          onClick={onLeaveFeedback}\n        >\n          {el}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport './Notification.scss';\n\nconst Notification = ({ message }) => (\n  <h2 className=\"Notification\">{message}</h2>\n);\n\nNotification.propTypes = { message: PropTypes.string.isRequired };\n\nexport default Notification;\n","import { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleFeedbackLeave = event => {\n    let stateItem = event.currentTarget.name;\n    this.setState(prevState => ({\n      [stateItem]: prevState[stateItem] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedbackLeave}\n        />\n        {this.countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}